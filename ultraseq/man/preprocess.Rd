% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess.R
\name{preprocess}
\alias{preprocess}
\title{Pre-process bam files following Broad's best practices for variant calling, starting from aligned BAM file}
\usage{
preprocess(bam, outfile, samplename = opts_flow$get("samplename"),
  split_by_chr = opts_flow$get("split_by_chr"),
  java_exe = opts_flow$get("java_exe"),
  java_tmp = opts_flow$get("java_tmp"),
  gatk_jar = opts_flow$get("gatk_jar"),
  picard_jar = opts_flow$get("picard_jar"),
  samtools_exe = opts_flow$get("samtools_exe"), cpu_markdup = 1,
  mem_markdup = "-Xmx8g", cpu_target = opts_flow$get("cpu_target"),
  mem_target = "-Xmx32g", cpu_realign = opts_flow$get("cpu_realign"),
  mem_realign = "-Xmx4g",
  cpu_baserecalib = opts_flow$get("cpu_baserecalib"),
  mem_baserecalib = "-Xmx4g",
  cpu_printreads = opts_flow$get("cpu_printreads"),
  mem_printreads = "-Xmx4g", ref_fasta = opts_flow$get("ref_fasta"),
  picard_markdup_opts = opts_flow$get("picard_markdup_opts"),
  gatk_target_opts = opts_flow$get("gatk_target_opts"),
  gatk_realign_opts = opts_flow$get("gatk_realign_opts"),
  gatk_baserecalib_opts = opts_flow$get("gatk_baserecalib_opts"),
  gatk_printreads_opts = opts_flow$get("gatk_printreads_opts"),
  execute_cmds = FALSE)
}
\arguments{
\item{bam}{}

\item{outfile}{}

\item{samplename}{}

\item{split_by_chr}{}

\item{java_exe}{path to java}

\item{java_tmp}{path to java tmp, can leave blank}

\item{gatk_jar}{}

\item{samtools_exe}{}

\item{cpu_markdup}{not used.}

\item{mem_markdup}{}

\item{cpu_target}{number of threads used for GATK target creation step}

\item{mem_target}{}

\item{cpu_realign}{}

\item{mem_realign}{}

\item{cpu_baserecalib}{}

\item{mem_baserecalib}{}

\item{cpu_printreads}{}

\item{mem_printreads}{}

\item{ref_fasta}{}

\item{gatk_target_opts}{}

\item{gatk_realign_opts}{}

\item{gatk_baserecalib_opts}{}

\item{gatk_printreads_opts}{}

\item{execute_cmds}{run commands, after creation. Useful for testing/debugging and running on local platforms.}

\item{picard_dir}{}

\item{bam}{}

\item{outfile}{}

\item{samplename}{}

\item{split_by_chr}{}

\item{java_exe}{}

\item{java_tmp}{}

\item{gatk_jar}{}

\item{picard_dir}{}

\item{samtools_exe}{}

\item{cpu_markdup}{}

\item{mem_markdup}{}

\item{cpu_target}{}

\item{mem_target}{}

\item{cpu_realign}{}

\item{ref_fasta}{}

\item{gatk_target_opts}{}

\item{gatk_realign_opts}{}

\item{gatk_baserecalib_opts}{}

\item{gatk_printreads_opts}{}
}
\description{
This function provides a wrapper around the best practices described on \href{https://www.broadinstitute.org/gatk/guide/bp_step.php?p=1}{GATK's website}.
If the link is broken google 'GATK best practices'

This aims to perform the following steps ( for DNA ):

\itemize{
\item mark duplicates
\item realign indels
\item recalibrate bases
\item current version: \emph{3.4-46}
}

For RNA GATK recommends a additional step of split n trim, which is not currently supported (contributions welcome !).

\strong{NOTE}:

Some GATK tools use \href{https://www.broadinstitute.org/gatk/guide/article?id=1975}{CPU threads while others use data threads},
flowr tries to use efficiently make the best use of both/either depending on tool's compatibility.
}
\details{
Flow following Broad's best practices for variant calling, starting from sorted bam
}
\examples{
\dontrun{
## load options, including paths to tools and other parameters
load_opts(fetch_conf("ngsflows.conf"), check = FALSE)
out = preprocess("my_wex.bam", samplename = "samp", split_by_chr = TRUE)

}
}

